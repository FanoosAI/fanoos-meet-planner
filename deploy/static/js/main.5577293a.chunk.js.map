{"version":3,"sources":["components/WeekDayPicker.jsx","components/Header.jsx","components/Footer.jsx","views/Layout.jsx","views/Home.jsx","views/NotFound.jsx","components/schedulerBoard.jsx","components/schedulerRecurrentBoard.jsx","utils/timezones.js","views/event-detail.jsx","views/BrowserRouter.jsx","App.js","index.js"],"names":["WeekDayPicker","state","manageState","selectedDay","event","dataset","target","day","monday","tuesday","wednesday","thursday","friday","saturday","sunday","className","onClick","Header","Navbar","to","Footer","Layout","children","Container","currentTimeZone","Intl","DateTimeFormat","resolvedOptions","timeZone","aryIannaTimeZones","dayHours","Home","history","useHistory","useState","name","safeWord","isRecurrent","initialTime","finishTime","deadLine","eventData","setEventData","selectedDaysWeek","setSelectedDaysWeek","selectedDaysMonth","setSelectedDaysMonth","endDaysISO","setEndDaysISO","endDaysFormatted","setEndDaysFormatted","handleChange","value","handleSubmit","hours","interval","nextDay","eachMinuteOfInterval","start","Date","end","step","map","item","format","setTimeIntervals","data","days","formatISO","console","log","axios","post","then","response","id","eventId","push","catch","error","useEffect","todayInMillis","getTime","surveyEndDaysISO","surveyEndDaysFormatted","Array","getSurveyEndDays","ISODays","FormattedDays","Row","Col","lg","xs","Form","Group","controlId","Control","type","placeholder","onChange","Text","Check","label","checked","xm","as","hour","index","Label","selectedDays","onDayClick","selected","inputSelectedDays","concat","selectedIndex","findIndex","DateUtils","isSameDay","splice","Button","NotFound","require","utcToZonedTime","zonedTimeToUtc","SchedulerBoard","props","selection","setSelection","groupSelection","e","schedules","formatDate","timezone","date","zonedDate","getDay","scheduler","dayName","MonthAndDayNumber","h","person","pindex","includes","hrs","curretSelection","indexToRemove","handleOnClick","SchedulerRecurrentBoard","dayOfWeek","setDayOfWeek","arr","Object","entries","forEach","key","newArr","filter","str","timezones","EventDetail","useParams","eventInformation","setEventInformation","loading","setLoading","isHidden","setIsHidden","selectTimezones","setSelectTimezones","yourSelection","setYourSelection","setName","selectedTimezone","setSelectedTimezone","userTimezone","setUserTimezone","canEdit","setCanEdit","eventsDate","setEventsDate","eventsLink","setEventsLink","Timezones","t","newTimezone","getEventInformation","res","err","finally","get","saveSchedules","handleSchedulerChange","onScheduleSubmit","alert","handleEventsDateOnChange","handleEventsLinkOnChange","saveEventchanges","handleEventOnchange","active","prompt","options","selectedOption","role","BrowserRouter","basename","exact","path","component","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"iUAGe,SAASA,EAAT,GAAgD,IAAvBC,EAAsB,EAAtBA,MAAOC,EAAe,EAAfA,YAC7C,SAASC,EAAYC,GACnB,IAAQC,EAAYD,EAAME,OAAlBD,QAERH,EAAY,2BACPD,GADM,kBAERI,EAAQE,KAAON,EAAMI,EAAQE,OAEjC,CAED,IACEC,EAOEP,EAPFO,OACAC,EAMER,EANFQ,QACAC,EAKET,EALFS,UACAC,EAIEV,EAJFU,SACAC,EAGEX,EAHFW,OACAC,EAEEZ,EAFFY,SACAC,EACEb,EADFa,OAGF,OACE,sBAAKC,UAAU,mBAAf,UACE,qBACEA,UAAS,gCAA2BD,EAAS,WAAa,IAC1D,WAAS,SACTE,QAASb,EAHX,oBAQA,qBACEY,UAAS,gCAA2BP,EAAS,WAAa,IAC1D,WAAS,SACTQ,QAASb,EAHX,oBAQA,qBACEY,UAAS,gCAA2BN,EAAU,WAAa,IAC3D,WAAS,UACTO,QAASb,EAHX,qBAQA,qBACEY,UAAS,gCAA2BL,EAAY,WAAa,IAC7D,WAAS,YACTM,QAASb,EAHX,uBAQA,qBACEY,UAAS,gCAA2BJ,EAAW,WAAa,IAC5D,WAAS,WACTK,QAASb,EAHX,sBAQA,qBACEY,UAAS,gCAA2BH,EAAS,WAAa,IAC1D,WAAS,SACTI,QAASb,EAHX,oBAQA,qBACEY,UAAS,gCAA2BF,EAAW,WAAa,IAC5D,WAAS,WACTG,QAASb,EAHX,wBASL,C,sBC9Ec,SAASc,IACtB,OACE,iCACE,cAACC,EAAA,EAAD,UACE,cAAC,IAAD,CAAMC,GAAG,IAAIJ,UAAU,oBAM9B,CCXc,SAASK,IACtB,OACE,0BAGH,CCHc,SAASC,EAAT,GAA+B,IAAbC,EAAY,EAAZA,SAC/B,OACE,eAACC,EAAA,EAAD,WACE,cAACN,EAAD,IAECK,EAED,cAACF,EAAD,MAGL,C,qBCNKI,EAAkBC,KAAKC,iBAAiBC,kBAAkBC,SAC1DC,EAAoB,CACxB,iBACA,aACA,aACA,gBACA,eACA,mBACA,mBACA,4BACA,oBACA,oBACA,qBACA,mBACA,mBACA,oBACA,iCACA,4BACA,0BACA,0BACA,4BACA,8BACA,6BACA,6BACA,4BACA,6BACA,iCACA,4BACA,oBACA,gBACA,sBACA,uBACA,mBACA,mBACA,sBACA,mBACA,wBACA,qBACA,qBACA,qBACA,mBACA,kBACA,kBACA,YACA,mBACA,aACA,kBACA,eACA,mBACA,cACA,iBACA,kBACA,gBACA,oBACA,iBACA,oBACA,iBACA,gBACA,oBACA,uBACA,iBACA,mBACA,sBACA,oBACA,iBACA,mBACA,qBACA,iBACA,eACA,eACA,iBACA,mBACA,kBACA,oBACA,kBACA,oBACA,uBACA,kBACA,kBACA,sBACA,kBACA,sBACA,mBACA,mBACA,sBACA,mBACA,uBACA,iBACA,wBACA,mBACA,wBACA,sBACA,iBACA,kBACA,uBACA,sBACA,oBACA,qBACA,iBACA,eACA,gBACA,iBACA,oBACA,mBACA,uBACA,iBACA,gBACA,cACA,iBACA,qBACA,iBACA,sBACA,kBACA,mBACA,eACA,iBACA,gBACA,gBACA,oBACA,wBACA,iBACA,oBACA,oBACA,iBACA,eACA,kBACA,gBACA,eACA,kBACA,kBACA,eACA,mBACA,gBACA,kBACA,iBACA,iBACA,eACA,gBACA,eACA,kBACA,eACA,mBACA,kBACA,uBACA,uBACA,gBACA,gBACA,yBACA,oBACA,eACA,gBACA,iBACA,iBACA,sBACA,yBACA,kBACA,eACA,iBACA,gBACA,gBACA,gBACA,iBACA,eACA,gBACA,eACA,cACA,qBACA,cACA,kBACA,aACA,aACA,iBACA,eACA,iBACA,oBACA,qBACA,iBACA,aACA,cACA,iBACA,gBACA,cACA,aACA,cACA,YACA,cACA,eACA,kBACA,iBACA,oBACA,cACA,iBACA,oBACA,gBACA,kBACA,iBACA,oBACA,cACA,mBACA,YACA,kBACA,aACA,qBACA,eACA,mBACA,kBACA,sBACA,iBACA,iBACA,oBACA,oBACA,mBACA,oBACA,kBACA,qBACA,kBACA,yBACA,oBACA,eACA,gBACA,kBACA,iBACA,kBACA,eACA,kBACA,mBACA,cACA,iBACA,gBACA,eACA,mBACA,kBACA,iBACA,eACA,iBACA,oBACA,kBACA,uBACA,uBACA,cACA,eACA,gBACA,mBACA,mBACA,sBACA,YACA,cACA,gBACA,mBACA,kBACA,gBACA,mBACA,aACA,iBACA,mBACA,kBACA,qBACA,gBACA,oBACA,eACA,mBACA,mBACA,iBACA,mBACA,gBACA,qBACA,YACA,mBACA,eACA,aACA,oBACA,mBACA,eACA,aACA,eACA,gBACA,mBACA,gBACA,eACA,gBACA,qBACA,iBACA,cACA,cACA,sBACA,cACA,kBACA,mBACA,iBACA,qBACA,cACA,kBACA,sBACA,gBACA,qBACA,kBACA,mBACA,eACA,gBACA,kBACA,YACA,gBACA,eACA,oBACA,kBACA,wBACA,mBACA,cACA,cACA,kBACA,oBACA,eACA,mBACA,kBACA,8BACA,8BACA,+BACA,4BACA,0BACA,0BACA,6BACA,wBACA,kBACA,4BACA,uBACA,oBACA,8BACA,iCACA,8BACA,iBACA,gBACA,kBACA,sBACA,oBACA,iBACA,gBACA,qBACA,kBACA,eACA,eACA,mBACA,qBACA,iBACA,gBACA,kBACA,mBACA,gBACA,iBACA,eACA,uBAEIC,EAAW,CACf,CAAC,EAAG,YACJ,CAAC,EAAG,YACJ,CAAC,EAAG,YACJ,CAAC,EAAG,YACJ,CAAC,EAAG,YACJ,CAAC,EAAG,YACJ,CAAC,EAAG,YACJ,CAAC,EAAG,YACJ,CAAC,EAAG,YACJ,CAAC,EAAG,YACJ,CAAC,GAAI,YACL,CAAC,GAAI,YACL,CAAC,GAAI,YACL,CAAC,GAAI,YACL,CAAC,GAAI,YACL,CAAC,GAAI,YACL,CAAC,GAAI,YACL,CAAC,GAAI,YACL,CAAC,GAAI,YACL,CAAC,GAAI,YACL,CAAC,GAAI,YACL,CAAC,GAAI,YACL,CAAC,GAAI,YACL,CAAC,GAAI,aAmDQ,SAASC,IACtB,IAAMC,EAAUC,cAChB,EAAkCC,mBAAS,CACzCC,KAAM,GACNC,SAAU,GACVC,aAAa,EACbC,YAAa,UACbC,WAAY,UACZC,SAAU,UACVZ,SAAU,YAPZ,mBAAOa,EAAP,KAAkBC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wI,IAA5B,IAEtBlB,EAAM1B,SAAN,sBAAmB6C,GAAnB,WAAuCzI,GAAvC,OAA6CwI,KAEpD,CAiBkDG,CAAc3I,EAAIoI,EAAxB,EAHb,SAMe,IAAVhC,EAAA,UAAiBgC,EAAEG,SAAS,MAAQ,GAAKH,GAAM,MAL3CA,EAFQ,QAL7B,UAAapI,GAAb,OAAmBoG,GAkB1B,IAAI,MAoCpB,CC7ID,IA+VemD,EA/VG,CACd,iBACA,aACA,aACA,gBACA,eACA,mBACA,mBACA,4BACA,oBACA,oBACA,qBACA,mBACA,mBACA,oBACA,iCACA,4BACA,0BACA,0BACA,4BACA,8BACA,6BACA,6BACA,4BACA,6BACA,iCACA,4BACA,oBACA,gBACA,sBACA,uBACA,mBACA,mBACA,sBACA,mBACA,wBACA,qBACA,qBACA,qBACA,mBACA,kBACA,kBACA,YACA,mBACA,aACA,kBACA,eACA,mBACA,cACA,iBACA,kBACA,gBACA,oBACA,iBACA,oBACA,iBACA,gBACA,oBACA,uBACA,iBACA,mBACA,sBACA,oBACA,iBACA,mBACA,qBACA,iBACA,eACA,eACA,iBACA,mBACA,kBACA,oBACA,kBACA,oBACA,uBACA,kBACA,kBACA,sBACA,kBACA,sBACA,mBACA,mBACA,sBACA,mBACA,uBACA,iBACA,wBACA,mBACA,wBACA,sBACA,iBACA,kBACA,uBACA,sBACA,oBACA,qBACA,iBACA,eACA,gBACA,iBACA,oBACA,mBACA,uBACA,iBACA,gBACA,cACA,iBACA,qBACA,iBACA,sBACA,kBACA,mBACA,eACA,iBACA,gBACA,gBACA,oBACA,wBACA,iBACA,oBACA,oBACA,iBACA,eACA,kBACA,gBACA,eACA,kBACA,kBACA,eACA,mBACA,gBACA,kBACA,iBACA,iBACA,eACA,gBACA,eACA,kBACA,eACA,mBACA,kBACA,uBACA,uBACA,gBACA,gBACA,yBACA,oBACA,eACA,gBACA,iBACA,iBACA,sBACA,yBACA,kBACA,eACA,iBACA,gBACA,gBACA,gBACA,iBACA,eACA,gBACA,eACA,cACA,qBACA,cACA,kBACA,aACA,aACA,iBACA,eACA,iBACA,oBACA,qBACA,iBACA,aACA,cACA,iBACA,gBACA,cACA,aACA,cACA,YACA,cACA,eACA,kBACA,iBACA,oBACA,cACA,iBACA,oBACA,gBACA,kBACA,iBACA,oBACA,cACA,mBACA,YACA,kBACA,aACA,qBACA,eACA,mBACA,kBACA,sBACA,iBACA,iBACA,oBACA,oBACA,mBACA,oBACA,kBACA,qBACA,kBACA,yBACA,oBACA,eACA,gBACA,kBACA,iBACA,kBACA,eACA,kBACA,mBACA,cACA,iBACA,gBACA,eACA,mBACA,kBACA,iBACA,eACA,iBACA,oBACA,kBACA,uBACA,uBACA,cACA,eACA,gBACA,mBACA,mBACA,sBACA,YACA,cACA,gBACA,mBACA,kBACA,gBACA,mBACA,aACA,iBACA,mBACA,kBACA,qBACA,gBACA,oBACA,eACA,mBACA,mBACA,iBACA,mBACA,gBACA,qBACA,YACA,mBACA,eACA,aACA,oBACA,mBACA,eACA,aACA,eACA,gBACA,mBACA,gBACA,eACA,gBACA,qBACA,iBACA,cACA,cACA,sBACA,cACA,kBACA,mBACA,iBACA,qBACA,cACA,kBACA,sBACA,gBACA,qBACA,kBACA,mBACA,eACA,gBACA,kBACA,YACA,gBACA,eACA,oBACA,kBACA,wBACA,mBACA,cACA,cACA,kBACA,oBACA,eACA,mBACA,kBACA,8BACA,8BACA,+BACA,4BACA,0BACA,0BACA,6BACA,wBACA,kBACA,4BACA,uBACA,oBACA,8BACA,iCACA,8BACA,iBACA,gBACA,kBACA,sBACA,oBACA,iBACA,gBACA,qBACA,kBACA,eACA,eACA,mBACA,qBACA,iBACA,gBACA,kBACA,mBACA,gBACA,iBACA,eACA,uBCjVW,SAASC,EAAYlC,GAChC,IAAOlD,EAAMqF,cAANrF,GACP,EAAwCzC,mBAAS,IAAjD,mBAAO2E,EAAP,KACA,GADA,KACgD3E,mBAAS,CAAC,IAA1D,mBAAO+H,EAAP,KAAyBC,EAAzB,KACA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","file":"static/js/main.5577293a.chunk.js","sourcesContent":["import React, { useState } from 'react';\r\nimport '../assets/scss/WeekDayPicker.scss';\r\n\r\nexport default function WeekDayPicker({ state, manageState }) {\r\n  function selectedDay(event) {\r\n    const { dataset } = event.target;\r\n\r\n    manageState({\r\n      ...state,\r\n      [dataset.day]: !state[dataset.day],\r\n    });\r\n  }\r\n\r\n  const {\r\n    monday,\r\n    tuesday,\r\n    wednesday,\r\n    thursday,\r\n    friday,\r\n    saturday,\r\n    sunday,\r\n  } = state;\r\n\r\n  return (\r\n    <div className=\"weekPicker__week\">\r\n      <div\r\n        className={`weekpicker__week--day ${sunday ? 'selected' : ''}`}\r\n        data-day=\"sunday\"\r\n        onClick={selectedDay}\r\n      >\r\n        Sunday\r\n      </div>\r\n\r\n      <div\r\n        className={`weekpicker__week--day ${monday ? 'selected' : ''}`}\r\n        data-day=\"monday\"\r\n        onClick={selectedDay}\r\n      >\r\n        Monday\r\n      </div>\r\n\r\n      <div\r\n        className={`weekpicker__week--day ${tuesday ? 'selected' : ''}`}\r\n        data-day=\"tuesday\"\r\n        onClick={selectedDay}\r\n      >\r\n        Tuesday\r\n      </div>\r\n\r\n      <div\r\n        className={`weekpicker__week--day ${wednesday ? 'selected' : ''}`}\r\n        data-day=\"wednesday\"\r\n        onClick={selectedDay}\r\n      >\r\n        Wednesday\r\n      </div>\r\n\r\n      <div\r\n        className={`weekpicker__week--day ${thursday ? 'selected' : ''}`}\r\n        data-day=\"thursday\"\r\n        onClick={selectedDay}\r\n      >\r\n        Thursday\r\n      </div>\r\n\r\n      <div\r\n        className={`weekpicker__week--day ${friday ? 'selected' : ''}`}\r\n        data-day=\"friday\"\r\n        onClick={selectedDay}\r\n      >\r\n        Friday\r\n      </div>\r\n\r\n      <div\r\n        className={`weekpicker__week--day ${saturday ? 'selected' : ''}`}\r\n        data-day=\"saturday\"\r\n        onClick={selectedDay}\r\n      >\r\n        Saturday\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { Navbar } from 'react-bootstrap';\r\n\r\nexport default function Header() {\r\n  return (\r\n    <header>\r\n      <Navbar>\r\n        <Link to=\"/\" className=\"navbar-brand\">\r\n          \r\n        </Link>\r\n      </Navbar>\r\n    </header>\r\n  );\r\n}\r\n","import React from 'react';\r\nimport { Row, Col } from 'react-bootstrap';\r\n\r\nexport default function Footer() {\r\n  return (\r\n    <footer>\r\n    </footer>\r\n  );\r\n}\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { Container } from 'react-bootstrap';\r\nimport { Header, Footer } from '../components';\r\n\r\nexport default function Layout({ children }) {\r\n  return (\r\n    <Container>\r\n      <Header />\r\n\r\n      {children}\r\n\r\n      <Footer />\r\n    </Container>\r\n  );\r\n}\r\n\r\nLayout.propTypes = {\r\n  children: PropTypes.any.isRequired,\r\n};\r\n","import React, { useState, useEffect } from 'react';\r\nimport { format, formatISO, eachMinuteOfInterval } from 'date-fns';\r\nimport { Row, Col, Form, Button } from 'react-bootstrap';\r\nimport DayPicker, { DateUtils } from 'react-day-picker';\r\nimport WeekDayPicker from '../components/WeekDayPicker';\r\nimport Layout from './Layout';\r\nimport axios from 'axios';\r\nimport { useHistory } from 'react-router';\r\n\r\nconst currentTimeZone = Intl.DateTimeFormat().resolvedOptions().timeZone;\r\nconst aryIannaTimeZones = [\r\n  'Europe/Andorra',\r\n  'Asia/Dubai',\r\n  'Asia/Kabul',\r\n  'Europe/Tirane',\r\n  'Asia/Yerevan',\r\n  'Antarctica/Casey',\r\n  'Antarctica/Davis',\r\n  'Antarctica/DumontDUrville', // https://bugs.chromium.org/p/chromium/issues/detail?id=928068\r\n  'Antarctica/Mawson',\r\n  'Antarctica/Palmer',\r\n  'Antarctica/Rothera',\r\n  'Antarctica/Syowa',\r\n  'Antarctica/Troll',\r\n  'Antarctica/Vostok',\r\n  'America/Argentina/Buenos_Aires',\r\n  'America/Argentina/Cordoba',\r\n  'America/Argentina/Salta',\r\n  'America/Argentina/Jujuy',\r\n  'America/Argentina/Tucuman',\r\n  'America/Argentina/Catamarca',\r\n  'America/Argentina/La_Rioja',\r\n  'America/Argentina/San_Juan',\r\n  'America/Argentina/Mendoza',\r\n  'America/Argentina/San_Luis',\r\n  'America/Argentina/Rio_Gallegos',\r\n  'America/Argentina/Ushuaia',\r\n  'Pacific/Pago_Pago',\r\n  'Europe/Vienna',\r\n  'Australia/Lord_Howe',\r\n  'Antarctica/Macquarie',\r\n  'Australia/Hobart',\r\n  'Australia/Currie',\r\n  'Australia/Melbourne',\r\n  'Australia/Sydney',\r\n  'Australia/Broken_Hill',\r\n  'Australia/Brisbane',\r\n  'Australia/Lindeman',\r\n  'Australia/Adelaide',\r\n  'Australia/Darwin',\r\n  'Australia/Perth',\r\n  'Australia/Eucla',\r\n  'Asia/Baku',\r\n  'America/Barbados',\r\n  'Asia/Dhaka',\r\n  'Europe/Brussels',\r\n  'Europe/Sofia',\r\n  'Atlantic/Bermuda',\r\n  'Asia/Brunei',\r\n  'America/La_Paz',\r\n  'America/Noronha',\r\n  'America/Belem',\r\n  'America/Fortaleza',\r\n  'America/Recife',\r\n  'America/Araguaina',\r\n  'America/Maceio',\r\n  'America/Bahia',\r\n  'America/Sao_Paulo',\r\n  'America/Campo_Grande',\r\n  'America/Cuiaba',\r\n  'America/Santarem',\r\n  'America/Porto_Velho',\r\n  'America/Boa_Vista',\r\n  'America/Manaus',\r\n  'America/Eirunepe',\r\n  'America/Rio_Branco',\r\n  'America/Nassau',\r\n  'Asia/Thimphu',\r\n  'Europe/Minsk',\r\n  'America/Belize',\r\n  'America/St_Johns',\r\n  'America/Halifax',\r\n  'America/Glace_Bay',\r\n  'America/Moncton',\r\n  'America/Goose_Bay',\r\n  'America/Blanc-Sablon',\r\n  'America/Toronto',\r\n  'America/Nipigon',\r\n  'America/Thunder_Bay',\r\n  'America/Iqaluit',\r\n  'America/Pangnirtung',\r\n  'America/Atikokan',\r\n  'America/Winnipeg',\r\n  'America/Rainy_River',\r\n  'America/Resolute',\r\n  'America/Rankin_Inlet',\r\n  'America/Regina',\r\n  'America/Swift_Current',\r\n  'America/Edmonton',\r\n  'America/Cambridge_Bay',\r\n  'America/Yellowknife',\r\n  'America/Inuvik',\r\n  'America/Creston',\r\n  'America/Dawson_Creek',\r\n  'America/Fort_Nelson',\r\n  'America/Vancouver',\r\n  'America/Whitehorse',\r\n  'America/Dawson',\r\n  'Indian/Cocos',\r\n  'Europe/Zurich',\r\n  'Africa/Abidjan',\r\n  'Pacific/Rarotonga',\r\n  'America/Santiago',\r\n  'America/Punta_Arenas',\r\n  'Pacific/Easter',\r\n  'Asia/Shanghai',\r\n  'Asia/Urumqi',\r\n  'America/Bogota',\r\n  'America/Costa_Rica',\r\n  'America/Havana',\r\n  'Atlantic/Cape_Verde',\r\n  'America/Curacao',\r\n  'Indian/Christmas',\r\n  'Asia/Nicosia',\r\n  'Asia/Famagusta',\r\n  'Europe/Prague',\r\n  'Europe/Berlin',\r\n  'Europe/Copenhagen',\r\n  'America/Santo_Domingo',\r\n  'Africa/Algiers',\r\n  'America/Guayaquil',\r\n  'Pacific/Galapagos',\r\n  'Europe/Tallinn',\r\n  'Africa/Cairo',\r\n  'Africa/El_Aaiun',\r\n  'Europe/Madrid',\r\n  'Africa/Ceuta',\r\n  'Atlantic/Canary',\r\n  'Europe/Helsinki',\r\n  'Pacific/Fiji',\r\n  'Atlantic/Stanley',\r\n  'Pacific/Chuuk',\r\n  'Pacific/Pohnpei',\r\n  'Pacific/Kosrae',\r\n  'Atlantic/Faroe',\r\n  'Europe/Paris',\r\n  'Europe/London',\r\n  'Asia/Tbilisi',\r\n  'America/Cayenne',\r\n  'Africa/Accra',\r\n  'Europe/Gibraltar',\r\n  'America/Godthab',\r\n  'America/Danmarkshavn',\r\n  'America/Scoresbysund',\r\n  'America/Thule',\r\n  'Europe/Athens',\r\n  'Atlantic/South_Georgia',\r\n  'America/Guatemala',\r\n  'Pacific/Guam',\r\n  'Africa/Bissau',\r\n  'America/Guyana',\r\n  'Asia/Hong_Kong',\r\n  'America/Tegucigalpa',\r\n  'America/Port-au-Prince',\r\n  'Europe/Budapest',\r\n  'Asia/Jakarta',\r\n  'Asia/Pontianak',\r\n  'Asia/Makassar',\r\n  'Asia/Jayapura',\r\n  'Europe/Dublin',\r\n  'Asia/Jerusalem',\r\n  'Asia/Kolkata',\r\n  'Indian/Chagos',\r\n  'Asia/Baghdad',\r\n  'Asia/Tehran',\r\n  'Atlantic/Reykjavik',\r\n  'Europe/Rome',\r\n  'America/Jamaica',\r\n  'Asia/Amman',\r\n  'Asia/Tokyo',\r\n  'Africa/Nairobi',\r\n  'Asia/Bishkek',\r\n  'Pacific/Tarawa',\r\n  'Pacific/Enderbury',\r\n  'Pacific/Kiritimati',\r\n  'Asia/Pyongyang',\r\n  'Asia/Seoul',\r\n  'Asia/Almaty',\r\n  'Asia/Qyzylorda',\r\n  'Asia/Qostanay', // https://bugs.chromium.org/p/chromium/issues/detail?id=928068\r\n  'Asia/Aqtobe',\r\n  'Asia/Aqtau',\r\n  'Asia/Atyrau',\r\n  'Asia/Oral',\r\n  'Asia/Beirut',\r\n  'Asia/Colombo',\r\n  'Africa/Monrovia',\r\n  'Europe/Vilnius',\r\n  'Europe/Luxembourg',\r\n  'Europe/Riga',\r\n  'Africa/Tripoli',\r\n  'Africa/Casablanca',\r\n  'Europe/Monaco',\r\n  'Europe/Chisinau',\r\n  'Pacific/Majuro',\r\n  'Pacific/Kwajalein',\r\n  'Asia/Yangon',\r\n  'Asia/Ulaanbaatar',\r\n  'Asia/Hovd',\r\n  'Asia/Choibalsan',\r\n  'Asia/Macau',\r\n  'America/Martinique',\r\n  'Europe/Malta',\r\n  'Indian/Mauritius',\r\n  'Indian/Maldives',\r\n  'America/Mexico_City',\r\n  'America/Cancun',\r\n  'America/Merida',\r\n  'America/Monterrey',\r\n  'America/Matamoros',\r\n  'America/Mazatlan',\r\n  'America/Chihuahua',\r\n  'America/Ojinaga',\r\n  'America/Hermosillo',\r\n  'America/Tijuana',\r\n  'America/Bahia_Banderas',\r\n  'Asia/Kuala_Lumpur',\r\n  'Asia/Kuching',\r\n  'Africa/Maputo',\r\n  'Africa/Windhoek',\r\n  'Pacific/Noumea',\r\n  'Pacific/Norfolk',\r\n  'Africa/Lagos',\r\n  'America/Managua',\r\n  'Europe/Amsterdam',\r\n  'Europe/Oslo',\r\n  'Asia/Kathmandu',\r\n  'Pacific/Nauru',\r\n  'Pacific/Niue',\r\n  'Pacific/Auckland',\r\n  'Pacific/Chatham',\r\n  'America/Panama',\r\n  'America/Lima',\r\n  'Pacific/Tahiti',\r\n  'Pacific/Marquesas',\r\n  'Pacific/Gambier',\r\n  'Pacific/Port_Moresby',\r\n  'Pacific/Bougainville',\r\n  'Asia/Manila',\r\n  'Asia/Karachi',\r\n  'Europe/Warsaw',\r\n  'America/Miquelon',\r\n  'Pacific/Pitcairn',\r\n  'America/Puerto_Rico',\r\n  'Asia/Gaza',\r\n  'Asia/Hebron',\r\n  'Europe/Lisbon',\r\n  'Atlantic/Madeira',\r\n  'Atlantic/Azores',\r\n  'Pacific/Palau',\r\n  'America/Asuncion',\r\n  'Asia/Qatar',\r\n  'Indian/Reunion',\r\n  'Europe/Bucharest',\r\n  'Europe/Belgrade',\r\n  'Europe/Kaliningrad',\r\n  'Europe/Moscow',\r\n  'Europe/Simferopol',\r\n  'Europe/Kirov',\r\n  'Europe/Astrakhan',\r\n  'Europe/Volgograd',\r\n  'Europe/Saratov',\r\n  'Europe/Ulyanovsk',\r\n  'Europe/Samara',\r\n  'Asia/Yekaterinburg',\r\n  'Asia/Omsk',\r\n  'Asia/Novosibirsk',\r\n  'Asia/Barnaul',\r\n  'Asia/Tomsk',\r\n  'Asia/Novokuznetsk',\r\n  'Asia/Krasnoyarsk',\r\n  'Asia/Irkutsk',\r\n  'Asia/Chita',\r\n  'Asia/Yakutsk',\r\n  'Asia/Khandyga',\r\n  'Asia/Vladivostok',\r\n  'Asia/Ust-Nera',\r\n  'Asia/Magadan',\r\n  'Asia/Sakhalin',\r\n  'Asia/Srednekolymsk',\r\n  'Asia/Kamchatka',\r\n  'Asia/Anadyr',\r\n  'Asia/Riyadh',\r\n  'Pacific/Guadalcanal',\r\n  'Indian/Mahe',\r\n  'Africa/Khartoum',\r\n  'Europe/Stockholm',\r\n  'Asia/Singapore',\r\n  'America/Paramaribo',\r\n  'Africa/Juba',\r\n  'Africa/Sao_Tome',\r\n  'America/El_Salvador',\r\n  'Asia/Damascus',\r\n  'America/Grand_Turk',\r\n  'Africa/Ndjamena',\r\n  'Indian/Kerguelen',\r\n  'Asia/Bangkok',\r\n  'Asia/Dushanbe',\r\n  'Pacific/Fakaofo',\r\n  'Asia/Dili',\r\n  'Asia/Ashgabat',\r\n  'Africa/Tunis',\r\n  'Pacific/Tongatapu',\r\n  'Europe/Istanbul',\r\n  'America/Port_of_Spain',\r\n  'Pacific/Funafuti',\r\n  'Asia/Taipei',\r\n  'Europe/Kiev',\r\n  'Europe/Uzhgorod',\r\n  'Europe/Zaporozhye',\r\n  'Pacific/Wake',\r\n  'America/New_York',\r\n  'America/Detroit',\r\n  'America/Kentucky/Louisville',\r\n  'America/Kentucky/Monticello',\r\n  'America/Indiana/Indianapolis',\r\n  'America/Indiana/Vincennes',\r\n  'America/Indiana/Winamac',\r\n  'America/Indiana/Marengo',\r\n  'America/Indiana/Petersburg',\r\n  'America/Indiana/Vevay',\r\n  'America/Chicago',\r\n  'America/Indiana/Tell_City',\r\n  'America/Indiana/Knox',\r\n  'America/Menominee',\r\n  'America/North_Dakota/Center',\r\n  'America/North_Dakota/New_Salem',\r\n  'America/North_Dakota/Beulah',\r\n  'America/Denver',\r\n  'America/Boise',\r\n  'America/Phoenix',\r\n  'America/Los_Angeles',\r\n  'America/Anchorage',\r\n  'America/Juneau',\r\n  'America/Sitka',\r\n  'America/Metlakatla',\r\n  'America/Yakutat',\r\n  'America/Nome',\r\n  'America/Adak',\r\n  'Pacific/Honolulu',\r\n  'America/Montevideo',\r\n  'Asia/Samarkand',\r\n  'Asia/Tashkent',\r\n  'America/Caracas',\r\n  'Asia/Ho_Chi_Minh',\r\n  'Pacific/Efate',\r\n  'Pacific/Wallis',\r\n  'Pacific/Apia',\r\n  'Africa/Johannesburg',\r\n];\r\nconst dayHours = [\r\n  [0, '12:00 am'],\r\n  [1, '01:00 am'],\r\n  [2, '02:00 am'],\r\n  [3, '03:00 am'],\r\n  [4, '04:00 am'],\r\n  [5, '05:00 am'],\r\n  [6, '06:00 am'],\r\n  [7, '07:00 am'],\r\n  [8, '08:00 am'],\r\n  [9, '09:00 am'],\r\n  [10, '10:00 am'],\r\n  [11, '11:00 am'],\r\n  [12, '12:00 pm'],\r\n  [13, '01:00 pm'],\r\n  [14, '02:00 pm'],\r\n  [15, '03:00 pm'],\r\n  [16, '04:00 pm'],\r\n  [17, '05:00 pm'],\r\n  [18, '06:00 pm'],\r\n  [19, '07:00 pm'],\r\n  [20, '08:00 pm'],\r\n  [21, '09:00 pm'],\r\n  [22, '10:00 pm'],\r\n  [23, '11:00 pm'],\r\n];\r\n\r\n/**\r\n * Calculates the surrounding 15 days after the user current day for the options of the survey end day\r\n * @returns An array with two arrays: one for the days in ISO 8601 format and another one with the days formatted like 'April, Monday 1st'\r\n */\r\nfunction getSurveyEndDays() {\r\n  let todayInMillis = new Date().getTime();\r\n  let surveyEndDaysISO = [];\r\n  let surveyEndDaysFormatted = [];\r\n\r\n  [...Array(15)].map(() => {\r\n    todayInMillis += 86400000;\r\n\r\n    // Here you can see the date-fns format options for the dates: https://date-fns.org/v2.21.1/docs/format\r\n    surveyEndDaysISO.push(formatISO(new Date(todayInMillis)));\r\n    surveyEndDaysFormatted.push(\r\n      format(new Date(todayInMillis), 'EEEE, MMMM do')\r\n    );\r\n  });\r\n\r\n  return [surveyEndDaysISO, surveyEndDaysFormatted];\r\n}\r\n\r\n/**\r\n * This method was created with the eachMinuteOfInterval() function in date-fns library to easily get the hour intervals between the selected hours by the user\r\n * @param {*} interval Steps the schedule going to follow\r\n * @param {*} initialTime The initial hour of the event\r\n * @param {*} finishTime  The finish hour of the event\r\n * @returns An array with the current steps intervals and parsed hour format\r\n */\r\nfunction setTimeIntervals(interval, initialTime, finishTime) {\r\n  //TODO: Change the way we do this with specific dates in calendar\r\n  let nextDay;\r\n\r\n  finishTime <= initialTime ? (nextDay = 2) : (nextDay = 1);\r\n\r\n  const result = eachMinuteOfInterval(\r\n    {\r\n      start: new Date(2021, 1, 1, initialTime, 0),\r\n      end: new Date(2021, 1, nextDay, finishTime, 0),\r\n    },\r\n    { step: interval }\r\n  );\r\n\r\n  const times = result.map((item) => format(item, 'hh:mmaaa'));\r\n\r\n  return times;\r\n}\r\n\r\nexport default function Home() {\r\n  const history = useHistory()\r\n  const [eventData, setEventData] = useState({\r\n    name: '',\r\n    safeWord: '',\r\n    isRecurrent: false,\r\n    initialTime: 'default',\r\n    finishTime: 'default',\r\n    deadLine: 'default',\r\n    timeZone: 'default',\r\n  });\r\n  const [selectedDaysWeek, setSelectedDaysWeek] = useState({\r\n    monday: false,\r\n    tuesday: false,\r\n    wednesday: false,\r\n    thursday: false,\r\n    friday: false,\r\n    saturday: false,\r\n    sunday: false,\r\n  });\r\n  const [selectedDaysMonth, setSelectedDaysMonth] = useState([]);\r\n  const [endDaysISO, setEndDaysISO] = useState([]);\r\n  const [endDaysFormatted, setEndDaysFormatted] = useState([]);\r\n\r\n  useEffect(() => {\r\n    const [ISODays, FormattedDays] = getSurveyEndDays();\r\n\r\n    setEventData({\r\n      ...eventData,\r\n      timeZone: currentTimeZone,\r\n    });\r\n    setEndDaysISO(ISODays);\r\n    setEndDaysFormatted(FormattedDays);\r\n  }, []);\r\n\r\n  function handleDayClick(day, { selected }) {\r\n    // TODO: Find a way to parse the date format we get from the calendar selected days\r\n    // TODO: Prevent selecting days before todays date\r\n    // TODO: Change the calendar timezone in relation to the one selected from the user\r\n    const inputSelectedDays = selectedDaysMonth.concat();\r\n\r\n    if (selected) {\r\n      const selectedIndex = inputSelectedDays.findIndex((selectedDay) =>\r\n        DateUtils.isSameDay(selectedDay, day)\r\n      );\r\n\r\n      inputSelectedDays.splice(selectedIndex, 1);\r\n    } else {\r\n      inputSelectedDays.push(day);\r\n    }\r\n\r\n    setSelectedDaysMonth(inputSelectedDays);\r\n  }\r\n\r\n  function handleChange(event) {\r\n    const { value, name } = event.target;\r\n\r\n    setEventData({\r\n      ...eventData,\r\n      [name]: value,\r\n    });\r\n  }\r\n\r\n  function handleSwitch(event) {\r\n    let { checked } = event.target;\r\n\r\n    checked = !isRecurrent;\r\n    setEventData({\r\n      ...eventData,\r\n      isRecurrent: !isRecurrent,\r\n    });\r\n  }\r\n\r\n  function handleSubmit(eventData) {\r\n    const {\r\n      name,\r\n      safeWord,\r\n      isRecurrent,\r\n      deadLine,\r\n      timeZone,\r\n      initialTime,\r\n      finishTime,\r\n      selectedDaysWeek,\r\n      selectedDaysMonth,\r\n    } = eventData;\r\n    const hours = setTimeIntervals(30, initialTime, finishTime);\r\n    let days;\r\n\r\n    isRecurrent\r\n      ? (days = selectedDaysWeek)\r\n      : (days = selectedDaysMonth.map((item) => formatISO(new Date(item))));\r\n\r\n    const data = {\r\n      name,\r\n      safeWord,\r\n      isRecurrent,\r\n      days,\r\n      hours,\r\n      deadLine,\r\n      timeZone,\r\n    };\r\n\r\n    console.log(data);\r\n\r\n    axios\r\n      .post(\r\n        'https://us-central1-nrggo-test.cloudfunctions.net/app/rest/events',\r\n        data\r\n      )\r\n      .then((response) => {\r\n        let id = response.data.eventId\r\n        history.push(`/event/${id}`);\r\n      })\r\n      .catch(error => {\r\n        console.error(error);\r\n      });\r\n  }\r\n\r\n  const {\r\n    name,\r\n    safeWord,\r\n    isRecurrent,\r\n    initialTime,\r\n    finishTime,\r\n    deadLine,\r\n    timeZone,\r\n  } = eventData;\r\n\r\n  return (\r\n    <Layout>\r\n      <Row className=\"create-event__head\">\r\n        <Col>\r\n          <h1>رویداد جدید</h1>\r\n        </Col>\r\n      </Row>\r\n\r\n      <Row className=\"create-event__data\">\r\n        <Col lg={6} xs={12} className=\"create-event__data__form\">\r\n          {/* TODO: Validate fields before submitting the data */}\r\n          <Form>\r\n            <Form.Group controlId=\"name\">\r\n              <Form.Control\r\n                name=\"name\"\r\n                type=\"text\"\r\n                placeholder=\"عنوان رویداد\"\r\n                value={name}\r\n                onChange={handleChange}\r\n              />\r\n            </Form.Group>\r\n\r\n            <Form.Group controlId=\"safeWord\">\r\n              <Form.Control\r\n                name=\"safeWord\"\r\n                type=\"text\"\r\n                placeholder=\"رمز عبور (اختیاری)\"\r\n                value={safeWord}\r\n                onChange={handleChange}\r\n              />\r\n\r\n              <Form.Text className=\"text-muted\">\r\n                برای اصلاح رویدادتان نیاز به رمز عبور دارید، اگر فکر میکنید نیاز به تغییر خواهد بود، رمز عبور را وارد کنید\r\n              </Form.Text>\r\n            </Form.Group>\r\n\r\n            <Form.Group controlId=\"isRecurrent\">\r\n              <Form.Check\r\n                name=\"isRecurrent\"\r\n                type=\"switch\"\r\n                label=\"رویداد هر هفته تکرار میشود؟\"\r\n                onChange={handleSwitch}\r\n              />\r\n            </Form.Group>\r\n\r\n            <Row>\r\n              <Col xm={6}>\r\n                <Form.Group controlId=\"initialTime\">\r\n                  <Form.Control\r\n                    name=\"initialTime\"\r\n                    as=\"select\"\r\n                    value={initialTime}\r\n                    onChange={handleChange}\r\n                  >\r\n                    <option value=\"default\">شروع بازه زمانی</option>\r\n                    {dayHours.map((hour, index) => (\r\n                      <option key={`init-hour-${index}`} value={hour[0]}>\r\n                        {hour[1]}\r\n                      </option>\r\n                    ))}\r\n                  </Form.Control>\r\n                </Form.Group>\r\n              </Col>\r\n\r\n              <Col xm={6}>\r\n                <Form.Group controlId=\"finishTime\">\r\n                  <Form.Control\r\n                    name=\"finishTime\"\r\n                    as=\"select\"\r\n                    value={finishTime}\r\n                    onChange={handleChange}\r\n                  >\r\n                    <option value=\"default\">انتهای بازه زمانی</option>\r\n                    {dayHours.map((hour, index) => (\r\n                      <option key={`finish-hour-${index}`} value={hour[0]}>\r\n                        {hour[1]}\r\n                      </option>\r\n                    ))}\r\n                  </Form.Control>\r\n                </Form.Group>\r\n              </Col>\r\n            </Row>\r\n\r\n            <Form.Group controlId=\"deadLine\">\r\n              <Form.Control\r\n                name=\"deadLine\"\r\n                as=\"select\"\r\n                value={deadLine}\r\n                onChange={handleChange}\r\n              >\r\n                <option value=\"default\">تاریخ پایان نظرسنجی را وارد کنید</option>\r\n                {endDaysFormatted.map((days, index) => (\r\n                  <option\r\n                    key={`survey-end-day-${index}`}\r\n                    value={endDaysISO[index]}\r\n                  >\r\n                    {days}\r\n                  </option>\r\n                ))}\r\n              </Form.Control>\r\n            </Form.Group>\r\n\r\n            <Form.Group controlId=\"timeZone\">\r\n              <Form.Control\r\n                name=\"timeZone\"\r\n                as=\"select\"\r\n                value={timeZone}\r\n                onChange={handleChange}\r\n              >\r\n                {aryIannaTimeZones.map((timeZone, index) => (\r\n                  <option key={`timeZone-${index}`} value={timeZone}>\r\n                    {timeZone}\r\n                  </option>\r\n                ))}\r\n              </Form.Control>\r\n            </Form.Group>\r\n          </Form>\r\n        </Col>\r\n\r\n        <Col\r\n          lg={6}\r\n          xs={12}\r\n          className=\"create-event__data__calendar d-flex flex-column\"\r\n        >\r\n          <Form.Label>لطفا تاریخ هایی که بنظرتان مناسب هست انتخاب کنید</Form.Label>\r\n\r\n          {!isRecurrent ? (\r\n            <DayPicker\r\n              selectedDays={selectedDaysMonth}\r\n              onDayClick={handleDayClick}\r\n            />\r\n          ) : (\r\n            <WeekDayPicker\r\n              state={selectedDaysWeek}\r\n              manageState={setSelectedDaysWeek}\r\n            />\r\n          )}\r\n        </Col>\r\n\r\n        <Col xs={12} className=\"create-event__data__submit\">\r\n          <Button\r\n            onClick={() =>\r\n              handleSubmit({\r\n                ...eventData,\r\n                selectedDaysWeek,\r\n                selectedDaysMonth,\r\n              })\r\n            }\r\n          >\r\n            ساخت رویداد\r\n          </Button>\r\n        </Col>\r\n      </Row>\r\n    </Layout>\r\n  );\r\n}\r\n","import React from 'react';\r\nimport Layout from './Layout';\r\n\r\nexport default function NotFound() {\r\n  return (\r\n    <Layout>\r\n      <h1>404 Not Found</h1>\r\n    </Layout>\r\n  );\r\n}\r\n","import React, { Fragment, useState, useEffect, useContext } from 'react'\r\nconst { zonedTimeToUtc, utcToZonedTime, format } = require('date-fns-tz')\r\nimport './scss/schedulerBoard.scss'\r\n\r\nexport default function SchedulerBoard(props) {\r\n    let [selection, setSelection] = useState([])\r\n    let [count, setCount] = useState(0)\r\n    let groupSelection = props.groupSelection\r\n\r\n    useEffect(() => {\r\n        console.log('groupSelection', props.groupSelection);\r\n        if(props.groupSelection) {\r\n            props.groupSelection.map(e => console.log(`this is ${e.name}'s schedules`, e.schedules))\r\n        }\r\n    }, [selection])\r\n\r\n\r\n    let formatDate = (day, timezone) => {\r\n        let date = new Date(day)\r\n        let zonedDate = utcToZonedTime(date, timezone)\r\n        const pattern = 'LLL dd'\r\n        const output = format(zonedDate, pattern, { timeZone: timezone })\r\n        return output\r\n    }\r\n\r\n    let getDay = (day, timezone) => {\r\n        let date = new Date(day)\r\n        let zonedDate = utcToZonedTime(date, timezone)\r\n        const pattern = 'ccc'\r\n        const output = format(zonedDate, pattern, { timeZone: timezone })\r\n        return output\r\n    }\r\n\r\n    let handleOnClick = (day, hrs) => {\r\n        let curretSelection = selection\r\n        \r\n        if(curretSelection.includes(`${day}${hrs}`)){\r\n            let indexToRemove = curretSelection.findIndex(e => e === `${day}${hrs}`)\r\n            curretSelection.splice(indexToRemove, 1);\r\n            setSelection(selection => [...curretSelection])\r\n            // console.log(`removed => ${day}${hrs}`, selection);\r\n            props.onChange([...curretSelection])\r\n        } else {\r\n            setSelection(selection => [...selection, `${day}${hrs}`])\r\n            // console.log(`added => ${day}${hrs}`, selection);\r\n            props.onChange([...curretSelection, `${day}${hrs}`])\r\n        }\r\n    }\r\n\r\n    if(!groupSelection) {\r\n        return (\r\n            //mobile view\r\n            <div className='d-flex scheduler__Container'>\r\n                {props.days && props.scheduler ? props.days.map((day, index) => {\r\n                    let dayName = getDay(day, 'America/Los_Angeles')\r\n                    let MonthAndDayNumber = formatDate(day, 'America/Los_Angeles' )\r\n                    return (\r\n                        <div key={`${day}${index}`} className='scheduler__day--column'>\r\n                            <div className='scheduler__day--header'>\r\n                                <h6>{MonthAndDayNumber}</h6>\r\n                                <h5>{dayName}</h5>\r\n                            </div>\r\n                            <Fragment>\r\n                                \r\n                                {props.scheduler.map((h) => (\r\n                                    <div key={`${h}${day}`}\r\n                                        className={`scheduler__cell ${selection.includes(`${MonthAndDayNumber}${h}`) ? 'selected' : null}`}\r\n                                        onClick={() => handleOnClick(MonthAndDayNumber, h)}\r\n                                    >\r\n                                        {index === 0 ? `${h.includes(\"30\") ? '' : h}` : null }\r\n                                    </div>\r\n                                ))}\r\n                            </Fragment>\r\n                        </div>\r\n                    )\r\n                }) : null}\r\n            </div>\r\n        )\r\n    } else {\r\n        return (\r\n            <div className='d-flex scheduler__Container'>\r\n                {props.days && props.scheduler ? props.days.map((day, index) => {\r\n                    let dayName = getDay(day, 'America/Los_Angeles')\r\n                    let MonthAndDayNumber = formatDate(day, 'America/Los_Angeles' )\r\n                    return (\r\n                        <div key={`${day}${index}`} className='scheduler__day--column position-relative'>\r\n                            <div className='scheduler__day--header'>\r\n                                <h6>{MonthAndDayNumber}</h6>\r\n                                <h5>{dayName}</h5>\r\n                            </div>\r\n                            <Fragment>\r\n                                {/* TODO: show groups participants */}\r\n                                {props.scheduler.map((h) => (\r\n                                    <div key={`${day}${h}`} className='cell__container position-relative'>\r\n                                        {props.groupSelection.map((person, pindex) => (\r\n                                            <div key={`${person}${h}${pindex}`}\r\n                                                className={`scheduler__cell ${pindex === 0 ? 'cell-relative' : 'cell-absolute'} ${person.schedules.includes(`${MonthAndDayNumber}${h}`) ? 'selected' : null}`}\r\n                                            > \r\n                                                {index === 0 && pindex === 0 ? `${h.includes(\"30\") ? '' : h}` : null }\r\n                                            </div>\r\n                                        ))}\r\n                                        {/* <div\r\n                                            className={`scheduler__cell ${props.groupSelection[2].schedules.includes(`${MonthAndDayNumber}${h}`) ? 'selected' : null}`}\r\n                                            // onClick={() => handleOnClick(MonthAndDayNumber, h)}\r\n                                        >\r\n                                            {index === 0 ? `${h.includes(\"30\") ? '' : h}` : null }\r\n                                        </div> */}\r\n\r\n                                    </div>\r\n                                ))}\r\n                            </Fragment>\r\n                        </div>\r\n                    )\r\n                }) : 'Cargando...'}\r\n            </div>\r\n        )\r\n    }\r\n\r\n    \r\n}\r\n","import React, { Fragment, useState, useEffect, useContext } from 'react'\r\nconst { zonedTimeToUtc, utcToZonedTime, format } = require('date-fns-tz')\r\nimport './scss/schedulerBoard.scss'\r\n\r\nexport default function SchedulerRecurrentBoard(props) {\r\n    let [selection, setSelection] = useState([])\r\n    let [count, setCount] = useState(0)\r\n    let groupSelection = props.groupSelection\r\n    let [dayOfWeek, setDayOfWeek] = useState([])\r\n\r\n    let day_of_week = new Date().getDay();\r\n\r\n    useEffect(() => {\r\n        console.log('groupSelection', props.groupSelection);\r\n        if(props.groupSelection) {\r\n            props.groupSelection.map(e => console.log(`this is ${e.name}'s schedules`, e.schedules))\r\n        }\r\n\r\n        let arr = ['', '', '', '', '', '', '']\r\n\r\n        // for (const [key, value] of Object.entries(props.days)) {\r\n        //         if (key === 'monday' && value === true) arr[0] = 'monday'\r\n        //         if (key === 'tuesday' && value === true) arr[1] = 'tuesday'\r\n        //         if (key === 'wednesday' && value === true) arr[2] = 'wednesday'\r\n        //         if (key === 'thursday' && value === true) arr[3] = 'thursday'\r\n        //         if (key === 'friday' && value === true) arr[4] = 'friday'\r\n        //         if (key === 'saturday' && value === true) arr[5] = 'saturday'\r\n        //         if (key === 'sunday' && value === true) arr[6] = 'sunday'\r\n        //     // if(value === true && key === 'sunday') {\r\n        //     //     // console.log(`${key}: ${value}`);\r\n        //     //     setDayOfWeek(dayOfWeek => [...dayOfWeek, key])\r\n        //     // }\r\n        // }\r\n        \r\n        Object.entries(props.days).forEach(([key, value]) => {\r\n                if (key === 'monday' && value === true) arr[0] = 'monday'\r\n                if (key === 'tuesday' && value === true) arr[1] = 'tuesday'\r\n                if (key === 'wednesday' && value === true) arr[2] = 'wednesday'\r\n                if (key === 'thursday' && value === true) arr[3] = 'thursday'\r\n                if (key === 'friday' && value === true) arr[4] = 'friday'\r\n                if (key === 'saturday' && value === true) arr[5] = 'saturday'\r\n                if (key === 'sunday' && value === true) arr[6] = 'sunday'\r\n        })\r\n        \r\n        let newArr = arr.filter(str => str !== '')\r\n        // setDayOfWeek(dayOfWeek => [...dayOfWeek, newArr])\r\n        setDayOfWeek(newArr)\r\n\r\n        const sortDays = days => {\r\n            let arr = ['', '', '', '', '', '', '']\r\n            days.forEach(day => {\r\n                if (day === 'Sun') arr[0] = 'Sun'\r\n                if (day === 'Mon') arr[1] = 'Mon'\r\n                if (day === 'Tue') arr[2] = 'Tue'\r\n                if (day === 'Wed') arr[3] = 'Wed'\r\n                if (day === 'Thu') arr[4] = 'Thu'\r\n                if (day === 'Fri') arr[5] = 'Fri'\r\n                if (day === 'Sat') arr[6] = 'Sat'\r\n            })\r\n            return arr.filter(str => str !== '')\r\n        }\r\n        \r\n    }, [selection])\r\n\r\n\r\n    let handleOnClick = (day, hrs) => {\r\n        let curretSelection = selection\r\n        \r\n        if(curretSelection.includes(`${day}${hrs}`)){\r\n            let indexToRemove = curretSelection.findIndex(e => e === `${day}${hrs}`)\r\n            curretSelection.splice(indexToRemove, 1);\r\n            setSelection(selection => [...curretSelection])\r\n            // console.log(`removed => ${day}${hrs}`, selection);\r\n            props.onChange([...curretSelection])\r\n        } else {\r\n            setSelection(selection => [...selection, `${day}${hrs}`])\r\n            // console.log(`added => ${day}${hrs}`, selection);\r\n            props.onChange([...curretSelection, `${day}${hrs}`])\r\n        }\r\n    }\r\n\r\n    if(!groupSelection) {\r\n        return (\r\n            //mobile view\r\n            <div className='d-flex scheduler__Container'>\r\n                {props.days && props.scheduler ? dayOfWeek.map((day, index) => {\r\n                    return (\r\n                        <div key={`${day}${index}`} className='scheduler__day--column'>\r\n                            <div className='scheduler__day--header'>\r\n                                <h5>{day}</h5>\r\n                            </div>\r\n                            <Fragment>\r\n                                {props.scheduler.map((h) => (\r\n                                    <div\r\n                                        key={h}\r\n                                        className={`scheduler__cell ${selection.includes(`${day}${h}`) ? 'selected' : null}`}\r\n                                        onClick={() => handleOnClick(day,h)}\r\n\r\n                                    >\r\n                                        {index === 0 ? `${h.includes(\"30\") ? '' : h}` : null }\r\n                                    </div>\r\n                                ))}\r\n                            </Fragment>\r\n                        </div>\r\n                    )\r\n                }) : null}\r\n            </div>\r\n        )\r\n    } else {\r\n        return (\r\n            // desktop view\r\n            <Fragment>\r\n                <div className='d-flex scheduler__Container'>\r\n                    {props.days && props.scheduler ? dayOfWeek.map((day,index) => {\r\n                        return (\r\n                            <div key={`${day}${index}`} className='scheduler__day--column position-relative'>\r\n                                <div className='scheduler__day--header'>\r\n                                    <h5>{day}</h5>\r\n                                </div>\r\n                                <Fragment>\r\n                                    {props.scheduler.map((h) => {\r\n                                        return (\r\n                                        <div key={h} className='cell__container position-relative'>\r\n                                            {props.groupSelection.map((person, pindex) => {\r\n                                                return (\r\n                                                <div key={`${person}${pindex}${h}`} className={`scheduler__cell ${pindex === 0 ? 'cell-relative' : 'cell-absolute'} ${person.schedules.includes(`${day}${h}`) ? 'selected' : null}`}>\r\n                                                    {index === 0 && pindex === 0 ? `${h.includes(\"30\") ? '' : h}` : null }\r\n                                                </div>)\r\n                                            })}\r\n                                        </div>\r\n                                    )})}\r\n                                </Fragment>\r\n                            </div>\r\n                        )\r\n                    }) : null}\r\n                </div>\r\n            </Fragment>\r\n        )\r\n    }\r\n\r\n    \r\n}\r\n","const timezones = [\r\n    'Europe/Andorra',\r\n    'Asia/Dubai',\r\n    'Asia/Kabul',\r\n    'Europe/Tirane',\r\n    'Asia/Yerevan',\r\n    'Antarctica/Casey',\r\n    'Antarctica/Davis',\r\n    'Antarctica/DumontDUrville', // https://bugs.chromium.org/p/chromium/issues/detail?id=928068\r\n    'Antarctica/Mawson',\r\n    'Antarctica/Palmer',\r\n    'Antarctica/Rothera',\r\n    'Antarctica/Syowa',\r\n    'Antarctica/Troll',\r\n    'Antarctica/Vostok',\r\n    'America/Argentina/Buenos_Aires',\r\n    'America/Argentina/Cordoba',\r\n    'America/Argentina/Salta',\r\n    'America/Argentina/Jujuy',\r\n    'America/Argentina/Tucuman',\r\n    'America/Argentina/Catamarca',\r\n    'America/Argentina/La_Rioja',\r\n    'America/Argentina/San_Juan',\r\n    'America/Argentina/Mendoza',\r\n    'America/Argentina/San_Luis',\r\n    'America/Argentina/Rio_Gallegos',\r\n    'America/Argentina/Ushuaia',\r\n    'Pacific/Pago_Pago',\r\n    'Europe/Vienna',\r\n    'Australia/Lord_Howe',\r\n    'Antarctica/Macquarie',\r\n    'Australia/Hobart',\r\n    'Australia/Currie',\r\n    'Australia/Melbourne',\r\n    'Australia/Sydney',\r\n    'Australia/Broken_Hill',\r\n    'Australia/Brisbane',\r\n    'Australia/Lindeman',\r\n    'Australia/Adelaide',\r\n    'Australia/Darwin',\r\n    'Australia/Perth',\r\n    'Australia/Eucla',\r\n    'Asia/Baku',\r\n    'America/Barbados',\r\n    'Asia/Dhaka',\r\n    'Europe/Brussels',\r\n    'Europe/Sofia',\r\n    'Atlantic/Bermuda',\r\n    'Asia/Brunei',\r\n    'America/La_Paz',\r\n    'America/Noronha',\r\n    'America/Belem',\r\n    'America/Fortaleza',\r\n    'America/Recife',\r\n    'America/Araguaina',\r\n    'America/Maceio',\r\n    'America/Bahia',\r\n    'America/Sao_Paulo',\r\n    'America/Campo_Grande',\r\n    'America/Cuiaba',\r\n    'America/Santarem',\r\n    'America/Porto_Velho',\r\n    'America/Boa_Vista',\r\n    'America/Manaus',\r\n    'America/Eirunepe',\r\n    'America/Rio_Branco',\r\n    'America/Nassau',\r\n    'Asia/Thimphu',\r\n    'Europe/Minsk',\r\n    'America/Belize',\r\n    'America/St_Johns',\r\n    'America/Halifax',\r\n    'America/Glace_Bay',\r\n    'America/Moncton',\r\n    'America/Goose_Bay',\r\n    'America/Blanc-Sablon',\r\n    'America/Toronto',\r\n    'America/Nipigon',\r\n    'America/Thunder_Bay',\r\n    'America/Iqaluit',\r\n    'America/Pangnirtung',\r\n    'America/Atikokan',\r\n    'America/Winnipeg',\r\n    'America/Rainy_River',\r\n    'America/Resolute',\r\n    'America/Rankin_Inlet',\r\n    'America/Regina',\r\n    'America/Swift_Current',\r\n    'America/Edmonton',\r\n    'America/Cambridge_Bay',\r\n    'America/Yellowknife',\r\n    'America/Inuvik',\r\n    'America/Creston',\r\n    'America/Dawson_Creek',\r\n    'America/Fort_Nelson',\r\n    'America/Vancouver',\r\n    'America/Whitehorse',\r\n    'America/Dawson',\r\n    'Indian/Cocos',\r\n    'Europe/Zurich',\r\n    'Africa/Abidjan',\r\n    'Pacific/Rarotonga',\r\n    'America/Santiago',\r\n    'America/Punta_Arenas',\r\n    'Pacific/Easter',\r\n    'Asia/Shanghai',\r\n    'Asia/Urumqi',\r\n    'America/Bogota',\r\n    'America/Costa_Rica',\r\n    'America/Havana',\r\n    'Atlantic/Cape_Verde',\r\n    'America/Curacao',\r\n    'Indian/Christmas',\r\n    'Asia/Nicosia',\r\n    'Asia/Famagusta',\r\n    'Europe/Prague',\r\n    'Europe/Berlin',\r\n    'Europe/Copenhagen',\r\n    'America/Santo_Domingo',\r\n    'Africa/Algiers',\r\n    'America/Guayaquil',\r\n    'Pacific/Galapagos',\r\n    'Europe/Tallinn',\r\n    'Africa/Cairo',\r\n    'Africa/El_Aaiun',\r\n    'Europe/Madrid',\r\n    'Africa/Ceuta',\r\n    'Atlantic/Canary',\r\n    'Europe/Helsinki',\r\n    'Pacific/Fiji',\r\n    'Atlantic/Stanley',\r\n    'Pacific/Chuuk',\r\n    'Pacific/Pohnpei',\r\n    'Pacific/Kosrae',\r\n    'Atlantic/Faroe',\r\n    'Europe/Paris',\r\n    'Europe/London',\r\n    'Asia/Tbilisi',\r\n    'America/Cayenne',\r\n    'Africa/Accra',\r\n    'Europe/Gibraltar',\r\n    'America/Godthab',\r\n    'America/Danmarkshavn',\r\n    'America/Scoresbysund',\r\n    'America/Thule',\r\n    'Europe/Athens',\r\n    'Atlantic/South_Georgia',\r\n    'America/Guatemala',\r\n    'Pacific/Guam',\r\n    'Africa/Bissau',\r\n    'America/Guyana',\r\n    'Asia/Hong_Kong',\r\n    'America/Tegucigalpa',\r\n    'America/Port-au-Prince',\r\n    'Europe/Budapest',\r\n    'Asia/Jakarta',\r\n    'Asia/Pontianak',\r\n    'Asia/Makassar',\r\n    'Asia/Jayapura',\r\n    'Europe/Dublin',\r\n    'Asia/Jerusalem',\r\n    'Asia/Kolkata',\r\n    'Indian/Chagos',\r\n    'Asia/Baghdad',\r\n    'Asia/Tehran',\r\n    'Atlantic/Reykjavik',\r\n    'Europe/Rome',\r\n    'America/Jamaica',\r\n    'Asia/Amman',\r\n    'Asia/Tokyo',\r\n    'Africa/Nairobi',\r\n    'Asia/Bishkek',\r\n    'Pacific/Tarawa',\r\n    'Pacific/Enderbury',\r\n    'Pacific/Kiritimati',\r\n    'Asia/Pyongyang',\r\n    'Asia/Seoul',\r\n    'Asia/Almaty',\r\n    'Asia/Qyzylorda',\r\n    'Asia/Qostanay', // https://bugs.chromium.org/p/chromium/issues/detail?id=928068\r\n    'Asia/Aqtobe',\r\n    'Asia/Aqtau',\r\n    'Asia/Atyrau',\r\n    'Asia/Oral',\r\n    'Asia/Beirut',\r\n    'Asia/Colombo',\r\n    'Africa/Monrovia',\r\n    'Europe/Vilnius',\r\n    'Europe/Luxembourg',\r\n    'Europe/Riga',\r\n    'Africa/Tripoli',\r\n    'Africa/Casablanca',\r\n    'Europe/Monaco',\r\n    'Europe/Chisinau',\r\n    'Pacific/Majuro',\r\n    'Pacific/Kwajalein',\r\n    'Asia/Yangon',\r\n    'Asia/Ulaanbaatar',\r\n    'Asia/Hovd',\r\n    'Asia/Choibalsan',\r\n    'Asia/Macau',\r\n    'America/Martinique',\r\n    'Europe/Malta',\r\n    'Indian/Mauritius',\r\n    'Indian/Maldives',\r\n    'America/Mexico_City',\r\n    'America/Cancun',\r\n    'America/Merida',\r\n    'America/Monterrey',\r\n    'America/Matamoros',\r\n    'America/Mazatlan',\r\n    'America/Chihuahua',\r\n    'America/Ojinaga',\r\n    'America/Hermosillo',\r\n    'America/Tijuana',\r\n    'America/Bahia_Banderas',\r\n    'Asia/Kuala_Lumpur',\r\n    'Asia/Kuching',\r\n    'Africa/Maputo',\r\n    'Africa/Windhoek',\r\n    'Pacific/Noumea',\r\n    'Pacific/Norfolk',\r\n    'Africa/Lagos',\r\n    'America/Managua',\r\n    'Europe/Amsterdam',\r\n    'Europe/Oslo',\r\n    'Asia/Kathmandu',\r\n    'Pacific/Nauru',\r\n    'Pacific/Niue',\r\n    'Pacific/Auckland',\r\n    'Pacific/Chatham',\r\n    'America/Panama',\r\n    'America/Lima',\r\n    'Pacific/Tahiti',\r\n    'Pacific/Marquesas',\r\n    'Pacific/Gambier',\r\n    'Pacific/Port_Moresby',\r\n    'Pacific/Bougainville',\r\n    'Asia/Manila',\r\n    'Asia/Karachi',\r\n    'Europe/Warsaw',\r\n    'America/Miquelon',\r\n    'Pacific/Pitcairn',\r\n    'America/Puerto_Rico',\r\n    'Asia/Gaza',\r\n    'Asia/Hebron',\r\n    'Europe/Lisbon',\r\n    'Atlantic/Madeira',\r\n    'Atlantic/Azores',\r\n    'Pacific/Palau',\r\n    'America/Asuncion',\r\n    'Asia/Qatar',\r\n    'Indian/Reunion',\r\n    'Europe/Bucharest',\r\n    'Europe/Belgrade',\r\n    'Europe/Kaliningrad',\r\n    'Europe/Moscow',\r\n    'Europe/Simferopol',\r\n    'Europe/Kirov',\r\n    'Europe/Astrakhan',\r\n    'Europe/Volgograd',\r\n    'Europe/Saratov',\r\n    'Europe/Ulyanovsk',\r\n    'Europe/Samara',\r\n    'Asia/Yekaterinburg',\r\n    'Asia/Omsk',\r\n    'Asia/Novosibirsk',\r\n    'Asia/Barnaul',\r\n    'Asia/Tomsk',\r\n    'Asia/Novokuznetsk',\r\n    'Asia/Krasnoyarsk',\r\n    'Asia/Irkutsk',\r\n    'Asia/Chita',\r\n    'Asia/Yakutsk',\r\n    'Asia/Khandyga',\r\n    'Asia/Vladivostok',\r\n    'Asia/Ust-Nera',\r\n    'Asia/Magadan',\r\n    'Asia/Sakhalin',\r\n    'Asia/Srednekolymsk',\r\n    'Asia/Kamchatka',\r\n    'Asia/Anadyr',\r\n    'Asia/Riyadh',\r\n    'Pacific/Guadalcanal',\r\n    'Indian/Mahe',\r\n    'Africa/Khartoum',\r\n    'Europe/Stockholm',\r\n    'Asia/Singapore',\r\n    'America/Paramaribo',\r\n    'Africa/Juba',\r\n    'Africa/Sao_Tome',\r\n    'America/El_Salvador',\r\n    'Asia/Damascus',\r\n    'America/Grand_Turk',\r\n    'Africa/Ndjamena',\r\n    'Indian/Kerguelen',\r\n    'Asia/Bangkok',\r\n    'Asia/Dushanbe',\r\n    'Pacific/Fakaofo',\r\n    'Asia/Dili',\r\n    'Asia/Ashgabat',\r\n    'Africa/Tunis',\r\n    'Pacific/Tongatapu',\r\n    'Europe/Istanbul',\r\n    'America/Port_of_Spain',\r\n    'Pacific/Funafuti',\r\n    'Asia/Taipei',\r\n    'Europe/Kiev',\r\n    'Europe/Uzhgorod',\r\n    'Europe/Zaporozhye',\r\n    'Pacific/Wake',\r\n    'America/New_York',\r\n    'America/Detroit',\r\n    'America/Kentucky/Louisville',\r\n    'America/Kentucky/Monticello',\r\n    'America/Indiana/Indianapolis',\r\n    'America/Indiana/Vincennes',\r\n    'America/Indiana/Winamac',\r\n    'America/Indiana/Marengo',\r\n    'America/Indiana/Petersburg',\r\n    'America/Indiana/Vevay',\r\n    'America/Chicago',\r\n    'America/Indiana/Tell_City',\r\n    'America/Indiana/Knox',\r\n    'America/Menominee',\r\n    'America/North_Dakota/Center',\r\n    'America/North_Dakota/New_Salem',\r\n    'America/North_Dakota/Beulah',\r\n    'America/Denver',\r\n    'America/Boise',\r\n    'America/Phoenix',\r\n    'America/Los_Angeles',\r\n    'America/Anchorage',\r\n    'America/Juneau',\r\n    'America/Sitka',\r\n    'America/Metlakatla',\r\n    'America/Yakutat',\r\n    'America/Nome',\r\n    'America/Adak',\r\n    'Pacific/Honolulu',\r\n    'America/Montevideo',\r\n    'Asia/Samarkand',\r\n    'Asia/Tashkent',\r\n    'America/Caracas',\r\n    'Asia/Ho_Chi_Minh',\r\n    'Pacific/Efate',\r\n    'Pacific/Wallis',\r\n    'Pacific/Apia',\r\n    'Africa/Johannesburg',\r\n];\r\n\r\nexport default timezones","import React, { Fragment, useEffect, useState } from 'react'\r\nimport Select from 'react-select'\r\nimport 'react-day-picker/lib/style.css';\r\nimport SchedulerBoard from '../components/schedulerBoard';\r\nimport SchedulerRecurrentBoard from '../components/schedulerRecurrentBoard';\r\n\r\nimport axios from 'axios';\r\nimport { useParams } from 'react-router';\r\nimport Timezones from '../utils/timezones'\r\nimport Layout from './Layout';\r\n\r\nexport default function EventDetail(props) {\r\n    const {id} = useParams()\r\n    const [selectedDays, setSelectedDays] = useState([])\r\n    const [eventInformation, setEventInformation] = useState({})\r\n    const [loading, setLoading] = useState(true)\r\n    const [isHidden, setIsHidden] = useState(true)\r\n    const [selectTimezones, setSelectTimezones] = useState([])\r\n    const [yourSelection, setYourSelection] = useState([])\r\n    const [name, setName] = useState('')\r\n    const [selectedTimezone, setSelectedTimezone] = useState(null)\r\n    const [userTimezone, setUserTimezone] = useState('')\r\n    const [canEdit, setCanEdit] = useState(false)\r\n    const [eventsDate, setEventsDate] = useState('')\r\n    const [eventsLink, setEventsLink] = useState('')\r\n\r\n    useEffect(() => {\r\n        console.log('selectedDays', selectedDays)\r\n\r\n        Timezones.map(t => {\r\n            let newTimezone = {value: t, label: t}\r\n            setSelectTimezones(selectTimezones => [...selectTimezones, newTimezone])\r\n        })\r\n\r\n        getEventInformation(id)\r\n        .then(res => {\r\n            console.log(`getEventInformation success! =>`, res.data);\r\n            setEventInformation(res.data)\r\n        })\r\n        .catch(err => {\r\n            console.error(`Ups!, there have been an error => ${err}`);\r\n        })\r\n        .finally(res => {\r\n            setLoading(false)\r\n        })\r\n    }, [id])\r\n\r\n    // setEventInformation(id)\r\n    const getEventInformation = async eventId => {\r\n        let res = await axios.get(`https://us-central1-nrggo-test.cloudfunctions.net/app/rest/events/${eventId}`)\r\n        return res.data\r\n    }\r\n\r\n    let handleVisibility = () => {\r\n        setIsHidden(!isHidden)\r\n    }\r\n\r\n    let handleSelectTimezone = (selectedOption) => {\r\n        setSelectedTimezone(selectedOption)\r\n        setUserTimezone(selectedOption.value)\r\n    }\r\n\r\n    let handleInputChange = e => {\r\n        let value = e.target.value\r\n        setName(value)\r\n    }\r\n\r\n    const saveSchedules = async (eventId, data) => {\r\n        let res = await axios.post(`https://us-central1-nrggo-test.cloudfunctions.net/app/rest/schedules/${eventId}`, data)\r\n        console.log('saveSchedules', res.data);\r\n        return res.data\r\n    }\r\n\r\n    let handleSchedulerChange = schedules => {\r\n        // console.log('handleSchedulerChange', schedules);\r\n        setYourSelection(schedules);\r\n    }\r\n\r\n    let onScheduleSubmit = () => {\r\n        if(!name || !userTimezone || !yourSelection ) {\r\n            alert('Please, complete form to save your schedules')\r\n        } else {\r\n            setLoading(true)\r\n            const data = {\r\n                name: name,\r\n                schedules: yourSelection,\r\n                timezone: userTimezone\r\n            }\r\n            console.log('onScheduleSubmit', data);\r\n            saveSchedules(id, data).then(res => {\r\n                getEventInformation(id)\r\n                .then(res => {\r\n                    console.log(`getEventInformation success! =>`, res.data);\r\n                    setEventInformation(res.data)\r\n                })\r\n                .catch(err => {\r\n                    console.error(`Ups!, there have been an error => ${err}`);\r\n                })\r\n                .finally(res => {\r\n                    setLoading(false)\r\n                })\r\n            })\r\n        }\r\n    }\r\n\r\n    let handleEventsDateOnChange = e => {\r\n        setEventsDate(e.target.value)\r\n    }\r\n\r\n    let handleEventsLinkOnChange = e => {\r\n        setEventsLink(e.target.value)\r\n    }\r\n\r\n\r\n    let editEventComponent = () => (\r\n        <div className='row no-gutters'>\r\n            <div className='col-12 col-md-12'>\r\n                <label className='form-label'>Enter the date of the Event.</label>\r\n                <input\r\n                    type='text'\r\n                    className='form-control input'\r\n                    placeholder='Enter the date of the event.'\r\n                    onChange={handleEventsDateOnChange}\r\n                    value={eventsDate}\r\n                />\r\n            </div>\r\n            <div className='col-12 col-md-12 mt-2'>\r\n                <label className='form-label'>Where will the event be? (link)</label>\r\n                <input\r\n                    type='text'\r\n                    className='form-control input'\r\n                    placeholder='Enter the link of the meeting.'\r\n                    onChange={handleEventsLinkOnChange}\r\n                    value={eventsLink}\r\n                />\r\n            </div>\r\n            <div className='col-12 mt-2'>\r\n                <div role='buttom' className='btn' onClick={() => handleEventOnchange()}>\r\n                    Guardar\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n\r\n    let onEditClick = () => {\r\n        let safeword = prompt(\"What is the safe word?\")\r\n        if(safeword === eventInformation.safeWord){\r\n            alert('safe word correct.')\r\n            setCanEdit(!canEdit)\r\n        } else {\r\n            alert('safe word is wrong.')\r\n        }\r\n        \r\n    }\r\n\r\n    let saveEventchanges = async (eventId, data) => {\r\n        let res = await axios.post(`https://us-central1-nrggo-test.cloudfunctions.net/app/rest/events/close/${eventId}`, data)\r\n        return res.data\r\n    }\r\n\r\n    let handleEventOnchange = () => {\r\n        setLoading(true)\r\n        let data = {\r\n            eventsDate: eventsDate,\r\n            eventsLink: eventsLink\r\n        }\r\n        saveEventchanges(id, data)\r\n        .then(res => {\r\n            setCanEdit(false)\r\n        })\r\n        .catch(err => {\r\n            console.error(err);\r\n        })\r\n        .finally(res => {\r\n            setLoading(false)\r\n        })\r\n        \r\n    } \r\n\r\n    if(!eventInformation.active) {\r\n        return(\r\n            <Layout>\r\n                <div className='row'>\r\n                    <div className='col-12'>\r\n                        <h2>{eventInformation.name}</h2>\r\n                        <p>The Event will be on {eventInformation.eventsDate}, to enter the event enter here {`${eventInformation.eventsLink}`}</p>\r\n                    </div>\r\n                </div>\r\n            </Layout>\r\n        )\r\n    } else {\r\n        return (\r\n            <Layout>\r\n                {loading ? (\r\n                    <h1 className='text-center'>Loading...</h1>\r\n                ):(\r\n                    <Fragment>\r\n                        <div className='row no-gutters form__container px-3'>\r\n                            <div className='col-12 d-flex align-items-center'>\r\n                                <h1 className='title main'>{eventInformation.name}</h1>\r\n                                {!canEdit ? (\r\n                                    <div className='ml-3 edit-btn' onClick={() => onEditClick()}>\r\n                                        Edit event\r\n                                    </div>\r\n                                ): null}\r\n                            </div>\r\n\r\n                            {!canEdit ? (\r\n                                <Fragment>\r\n                                    <div className='col-12 col-md-5'>\r\n                                        <label className='form-label'>To safe your vote, we need your name</label>\r\n                                        <input\r\n                                            type='text'\r\n                                            className='form-control input'\r\n                                            placeholder='Type your name here.'\r\n                                            onChange={handleInputChange}\r\n                                            value={name}\r\n                                        />\r\n                                    </div>\r\n                                    <div className='col-12 col-md-5 ml-md-4 align-self-end'>\r\n                                        <Select \r\n                                            options={selectTimezones}\r\n                                            className={'select'}\r\n                                            value={selectedTimezone}\r\n                                            onChange={handleSelectTimezone}\r\n                                        />\r\n                                    </div>\r\n                                </Fragment>\r\n                            ) : (\r\n                                null\r\n                            )}\r\n    \r\n                        </div>\r\n\r\n                        <div className='row no-gutters  px-md-3'>\r\n                            <div className='col-12 col-md-5 mr-md-4' >\r\n                                {!canEdit ? (\r\n                                    <Fragment>\r\n                                        {/* Mobile view */}\r\n                                        {isHidden ? (\r\n                                            <Fragment>\r\n                                                {eventInformation.days ? (\r\n                                                    <Fragment>\r\n                                                        <h2 className='title px-3'>Your availability</h2>\r\n                                                        {eventInformation.isRecurrent ? (\r\n                                                            <SchedulerRecurrentBoard\r\n                                                                days={eventInformation.days}\r\n                                                                scheduler={eventInformation.hours}\r\n                                                                onChange={handleSchedulerChange}\r\n                                                            />\r\n                                                        ) : (\r\n                                                            <SchedulerBoard\r\n                                                                days={eventInformation.days}\r\n                                                                scheduler={eventInformation.hours}\r\n                                                                onChange={handleSchedulerChange}\r\n                                                            />\r\n                                                        )}\r\n                                                        \r\n                                                    </Fragment>\r\n                                                ) : (null)}\r\n                                                <div className='col-12 col-md-5 mt-4 d-flex d-md-none'>\r\n                                                    <div role='button' className='btn' onClick={() => onScheduleSubmit()}>\r\n                                                        Set schedules\r\n                                                    </div>\r\n                                                </div>\r\n                                            </Fragment>\r\n                                        ) : (\r\n                                            <Fragment>\r\n                                                <h2 className='title px-3'>Your group's availability</h2>\r\n                                                    {eventInformation.isRecurrent ? (\r\n                                                        <SchedulerRecurrentBoard\r\n                                                            days={eventInformation.days}\r\n                                                            scheduler={eventInformation.hours}\r\n                                                            onChange={handleSchedulerChange}\r\n                                                            groupSelection={eventInformation.schedules}\r\n                                                            timezone={eventInformation.timeZone}\r\n                                                        />\r\n                                                    ) : (\r\n                                                        <SchedulerBoard\r\n                                                            event={eventInformation}\r\n                                                            days={eventInformation.days}\r\n                                                            scheduler={eventInformation.hours}\r\n                                                            groupSelection={eventInformation.schedules}\r\n                                                            timezone={eventInformation.timeZone}\r\n                                                        />\r\n                                                    )}\r\n                                            </Fragment>\r\n                                        )}\r\n                                        <div className='col-12 col-md-12 mt-4 d-none d-md-flex p-0'>\r\n                                            <div role='button' className='btn' onClick={() => onScheduleSubmit()}>\r\n                                                set schedules\r\n                                            </div>\r\n                                        </div>\r\n                                    </Fragment>\r\n                                ) : (\r\n                                    <Fragment>\r\n                                        {editEventComponent()}\r\n                                    </Fragment>\r\n                                )}\r\n                                \r\n                            </div>\r\n\r\n                            <div className='col-12 col-md-5 d-none d-md-block' >\r\n                                <h2 className='title px-3'>Your group's availability</h2>\r\n                                    {eventInformation.isRecurrent ? (\r\n                                        <SchedulerRecurrentBoard\r\n                                            days={eventInformation.days}\r\n                                            scheduler={eventInformation.hours}\r\n                                            onChange={handleSchedulerChange}\r\n                                            groupSelection={eventInformation.schedules}\r\n                                            timezone={eventInformation.timeZone}\r\n                                        />\r\n                                    ) : (\r\n                                        <SchedulerBoard\r\n                                            days={eventInformation.days}\r\n                                            scheduler={eventInformation.hours}\r\n                                            groupSelection={eventInformation.schedules}\r\n                                            timezone={eventInformation.timeZone}\r\n                                        />\r\n                                    )}\r\n                            </div>\r\n\r\n                            \r\n                            \r\n                        </div>\r\n\r\n                        <div className='btn__container d-flex d-md-none fixed-bottom'>\r\n                            <div className='btn' role='button' onClick={() => handleVisibility()}>\r\n                                {isHidden ? 'See group’s availability' : 'See your availability'}\r\n                            </div>\r\n                        </div>\r\n                        \r\n                    </Fragment>\r\n                )}\r\n                \r\n            </Layout>\r\n        )\r\n    }\r\n}\r\n\r\n","import React from \"react\";\r\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\r\nimport { Home, NotFound } from \".\";\r\nimport EventDetail from \"./event-detail\";\r\n\r\nexport default function BrowserRouter() {\r\n  return (\r\n    <Router basename=\"/deploy\">\r\n      <Switch>\r\n        <Route exact path=\"/\" component={Home} />\r\n        <Route path=\"/event/:id\" component={EventDetail} />\r\n        <Route path=\"*\" component={NotFound} />\r\n      </Switch>\r\n    </Router>\r\n  );\r\n}\r\n","import React from 'react';\r\nimport BrowserRouter from './views/BrowserRouter';\r\n\r\nfunction App() {\r\n  return <BrowserRouter />;\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport './assets/scss/global.scss';\r\nimport App from './App';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n"],"sourceRoot":""}